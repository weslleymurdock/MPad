name: release

on:
  push:
    tags: 
        '*'  
  workflow_dispatch:

permissions:
  contents: write 

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry

jobs:
  build:
    runs-on: macos-13
    name: build
    steps:
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.1'
 
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources
        
      - uses: actions/setup-java@v2
        with:
          distribution: 'microsoft'
          java-version: '11' 

      - name: Restore Dependencies
        run: | 
          dotnet restore src/MPad/MPad.Lib/MPad.Lib.csproj

      - name: Build 
        run: dotnet build src/MPad/MPad.Lib/MPad.Lib.csproj -c Release --no-restore
       
      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      
      - name: Push to nuget
        run: dotnet nuget push src/MPad/MPad.Lib/bin/Release/MPad.Lib.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${API_KEY} --skip-duplicate
        env:
          API_KEY: ${{ secrets.API_KEY }}

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
            draft: false
            prerelease: false
            release_name: ${{ github.ref }}
            tag_name: ${{ github.ref }}
            body_path: CHANGELOG.md
        env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     
      - name: Get Name of Artifact
        run: |
          cd src/MPad/MPad.Lib/bin/Release
          ARTIFACT_PATHNAME=$(ls -d -1 "$PWD/"*.nupkg)
          ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
          echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV
          echo "ARTIFACT_PATHNAME=${ARTIFACT_PATHNAME}" >> $GITHUB_ENV
    
      - name: upload .nupkg 
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ${{ env.ARTIFACT_PATHNAME }}
            asset_name: ${{ env.ARTIFACT_NAME }}
            asset_content_type: application/zip